generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model activityLog {
  id      Int       @id @default(autoincrement()) @unique
  date    DateTime  @default(now()) @db.Timestamptz
  action  String
  userId  Int?      @map("userId")
  user    user?     @relation(fields: [userId], references: [id])
  gpId    Int?      @map("gpId")
  gp      gp?       @relation(fields: [gpId], references: [id])
}

model city {
  id        Int     @id @default(autoincrement()) @unique
  name      String
  nationId  Int
  nation    nation  @relation(fields: [nationId], references: [id])
  gps       gp[]
  @@map("cities")
}

model gp {
  id            Int       @id @default(autoincrement()) @unique
  gp            Int
  cityId        Int
  city          city      @relation(fields: [cityId], references: [id])
  startDate     DateTime? @db.Date
  wildCard      Int?
  finished      Boolean?
  usersResults  userResult[]
  usersPicks    userPick[]
  ridersResults riderResult[]
  activity      activityLog[]
	@@map("gps")
}

model nation {
  id      Int     @id @default(autoincrement()) @unique
  name    String  @default("") @db.VarChar(20)
  code    String  @default("") @db.Char(2)
  cities  city[]
  riders  rider[]
	@@map("nations")
}

model rider {
  id            Int     @id @default(autoincrement()) @unique
  name          String
  number        Int
  nationId      Int
  nation        nation  @relation(fields: [nationId], references: [id])
  active        Boolean?
  substitute    Boolean?
  riderResults  riderResult[]
  picks         pick[]
	@@map("riders")
}

model riderResult {
  id      Int   @id @default(autoincrement()) @unique
  riderId Int
  rider   rider @relation(fields: [riderId], references: [id])
  gpId    Int
  gp      gp    @relation(fields: [gpId], references: [id])
  points  Int   @default(0)
  races   Int   @default(0)
  podium  Int?
	@@map("riderResults")
}

model user {
  id            Int     @id @default(autoincrement()) @unique
  uid           String  @unique
  firstName     String  @default("") @db.VarChar(20)
  lastName      String  @default("") @db.VarChar(20)
  email         String  @default("") @db.VarChar(100) @unique
  admin         Boolean @default(false)
  reminder      Boolean @default(true)
  userResults   userResult[]
  userStandings userStanding[]
  userStars     userStar[]
  userPicks     userPick[]
  activity      activityLog[]
	@@map("users")
}

model userPick {
  id          Int       @id @default(autoincrement()) @unique
  userId      Int
  user        user      @relation(fields: [userId], references: [id], map: "user")
  gpId        Int
  gp          gp        @relation(fields: [gpId], references: [id])
  dateCreated DateTime  @default(now()) @db.Timestamp(0)
  dateUpdated DateTime  @updatedAt
  picks       pick[]
	@@map("userPicks")
}

model pick {
  id          Int       @id @default(autoincrement()) @unique
  userPickId  Int
  user        userPick  @relation(fields: [userPickId], references: [id])
  riderId     Int
  rider       rider     @relation(fields: [riderId], references: [id])
	@@map("picks")
}

model userResult {
  id        Int   @id @default(autoincrement()) @unique
  userId    Int
  user      user  @relation(fields: [userId], references: [id])
  gpId      Int
  gp        gp    @relation(fields: [gpId], references: [id])
  points    Int   @default(0)
  m1        Int   @default(0)
  m2        Int   @default(0)
  m3        Int   @default(0)
  races     Int   @default(0)
  position  Int?
	@@map("userResults")
}

model userStanding {
  id            Int   @id @default(autoincrement()) @unique
  userId        Int
  user          user  @relation(fields: [userId], references: [id])
  year          Int
  points        Int   @default(0)
  m1            Int   @default(0)
  m2            Int   @default(0)
  m3            Int   @default(0)
  races         Int   @default(0)
  position      Int?
  prevPosition  Int?
	@@map("userStandings")
}

model userStar {
  id      Int   @id @default(autoincrement()) @unique
  userId  Int
  user    user  @relation(fields: [userId], references: [id])
  year    Int
  type    Int
	@@map("userStars")
}